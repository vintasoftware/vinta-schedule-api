# Generated by Django 5.2.2 on 2025-08-31 15:08

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('calendar_integration', '0007_availabletime_is_recurring_exception_and_more'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='availabletime',
            name='bulk_modification_parent',
            field=models.ForeignObject(editable=False, from_fields=['bulk_modification_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications', to='calendar_integration.availabletime', to_fields=['id', 'organization_id']),
        ),
        migrations.AddField(
            model_name='availabletime',
            name='bulk_modification_parent_fk',
            field=models.ForeignKey(blank=True, help_text='If this is a continuation of a split series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications_fk_rel', to='calendar_integration.availabletime'),
        ),
        migrations.AddField(
            model_name='blockedtime',
            name='bulk_modification_parent',
            field=models.ForeignObject(editable=False, from_fields=['bulk_modification_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications', to='calendar_integration.blockedtime', to_fields=['id', 'organization_id']),
        ),
        migrations.AddField(
            model_name='blockedtime',
            name='bulk_modification_parent_fk',
            field=models.ForeignKey(blank=True, help_text='If this is a continuation of a split series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications_fk_rel', to='calendar_integration.blockedtime'),
        ),
        migrations.AddField(
            model_name='calendarevent',
            name='bulk_modification_parent',
            field=models.ForeignObject(editable=False, from_fields=['bulk_modification_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications', to='calendar_integration.calendarevent', to_fields=['id', 'organization_id']),
        ),
        migrations.AddField(
            model_name='calendarevent',
            name='bulk_modification_parent_fk',
            field=models.ForeignKey(blank=True, help_text='If this is a continuation of a split series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modifications_fk_rel', to='calendar_integration.calendarevent'),
        ),
        migrations.CreateModel(
            name='AvailableTimeBulkModification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('meta', models.JSONField(blank=True, default=dict, verbose_name='meta')),
                ('modification_start_date', models.DateTimeField(help_text='The date from which the modification applies')),
                ('is_bulk_cancelled', models.BooleanField(default=False, help_text='True if all occurrences from this date are cancelled')),
                ('modified_continuation', models.ForeignObject(editable=False, from_fields=['modified_continuation_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_set', to='calendar_integration.availabletimebulkmodification', to_fields=['id', 'organization_id'])),
                ('modified_continuation_fk', models.ForeignKey(blank=True, help_text='New recurring object for modified series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_fk_rel', to='calendar_integration.availabletimebulkmodification')),
                ('organization', models.ForeignKey(help_text='The organization this model is associated with. Queries should use the `organization` field.', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organizations.organization')),
                ('original_parent', models.ForeignObject(editable=False, from_fields=['original_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_set', to='calendar_integration.availabletimebulkmodification', to_fields=['id', 'organization_id'])),
                ('original_parent_fk', models.ForeignKey(blank=True, help_text='Original recurring object before split', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_fk_rel', to='calendar_integration.availabletimebulkmodification')),
                ('parent_available_time', models.ForeignObject(editable=False, from_fields=['parent_available_time_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records', to='calendar_integration.availabletime', to_fields=['id', 'organization_id'])),
                ('parent_available_time_fk', models.ForeignKey(help_text='The recurring available time this bulk modification applies to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records_fk_rel', to='calendar_integration.availabletime')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockedTimeBulkModification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('meta', models.JSONField(blank=True, default=dict, verbose_name='meta')),
                ('modification_start_date', models.DateTimeField(help_text='The date from which the modification applies')),
                ('is_bulk_cancelled', models.BooleanField(default=False, help_text='True if all occurrences from this date are cancelled')),
                ('modified_continuation', models.ForeignObject(editable=False, from_fields=['modified_continuation_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_set', to='calendar_integration.blockedtimebulkmodification', to_fields=['id', 'organization_id'])),
                ('modified_continuation_fk', models.ForeignKey(blank=True, help_text='New recurring object for modified series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_fk_rel', to='calendar_integration.blockedtimebulkmodification')),
                ('organization', models.ForeignKey(help_text='The organization this model is associated with. Queries should use the `organization` field.', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organizations.organization')),
                ('original_parent', models.ForeignObject(editable=False, from_fields=['original_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_set', to='calendar_integration.blockedtimebulkmodification', to_fields=['id', 'organization_id'])),
                ('original_parent_fk', models.ForeignKey(blank=True, help_text='Original recurring object before split', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_fk_rel', to='calendar_integration.blockedtimebulkmodification')),
                ('parent_blocked_time', models.ForeignObject(editable=False, from_fields=['parent_blocked_time_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records', to='calendar_integration.blockedtime', to_fields=['id', 'organization_id'])),
                ('parent_blocked_time_fk', models.ForeignKey(help_text='The recurring blocked time this bulk modification applies to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records_fk_rel', to='calendar_integration.blockedtime')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventBulkModification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('meta', models.JSONField(blank=True, default=dict, verbose_name='meta')),
                ('modification_start_date', models.DateTimeField(help_text='The date from which the modification applies')),
                ('is_bulk_cancelled', models.BooleanField(default=False, help_text='True if all occurrences from this date are cancelled')),
                ('modified_continuation', models.ForeignObject(editable=False, from_fields=['modified_continuation_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_set', to='calendar_integration.eventbulkmodification', to_fields=['id', 'organization_id'])),
                ('modified_continuation_fk', models.ForeignKey(blank=True, help_text='New recurring object for modified series', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_continuation_fk_rel', to='calendar_integration.eventbulkmodification')),
                ('organization', models.ForeignKey(help_text='The organization this model is associated with. Queries should use the `organization` field.', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='organizations.organization')),
                ('original_parent', models.ForeignObject(editable=False, from_fields=['original_parent_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_set', to='calendar_integration.eventbulkmodification', to_fields=['id', 'organization_id'])),
                ('original_parent_fk', models.ForeignKey(blank=True, help_text='Original recurring object before split', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_parent_fk_rel', to='calendar_integration.eventbulkmodification')),
                ('parent_event', models.ForeignObject(editable=False, from_fields=['parent_event_fk', 'organization_id'], null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records', to='calendar_integration.calendarevent', to_fields=['id', 'organization_id'])),
                ('parent_event_fk', models.ForeignKey(help_text='The recurring event this bulk modification applies to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bulk_modification_records_fk_rel', to='calendar_integration.calendarevent')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

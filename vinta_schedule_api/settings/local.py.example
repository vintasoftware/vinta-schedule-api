from .local_base import *  # noqa

USE_LOCALSTACK = True
if USE_LOCALSTACK:
    AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID", default="test")
    AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY", default="test")
    AWS_S3_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID
    AWS_S3_SECRET_ACCESS_KEY = AWS_SECRET_ACCESS_KEY
    AWS_MEDIA_BUCKET_NAME = config("S3_BUCKET_NAME", default="vinta_schedule")
    AWS_STORAGE_BUCKET_NAME = AWS_MEDIA_BUCKET_NAME
    AWS_MEDIA_LOCATION = ""
    AWS_MEDIA_S3_CUSTOM_DOMAIN = None
    AWS_S3_URL_PROTOCOL = "http:"
    AWS_S3_REGION_NAME = config("AWS_S3_REGION_NAME", default="us-east-1")
    # Internal endpoint for Django backend operations
    AWS_MEDIA_S3_ENDPOINT_URL = config("LOCALSTACK_ENDPOINT", default="http://localstack:4566")
    # External endpoint for browser/frontend access (S3Direct)
    S3DIRECT_ENDPOINT = config("LOCALSTACK_EXTERNAL_ENDPOINT", default="http://localhost:4566")
    AWS_MEDIA_REGION = AWS_S3_REGION_NAME
    S3DIRECT_DESTINATIONS["providers_documents"]["bucket"] = AWS_MEDIA_BUCKET_NAME
    S3DIRECT_DESTINATIONS["providers_documents"]["acl"] = "private"
    S3DIRECT_DESTINATIONS["providers_documents"]["endpoint"] = S3DIRECT_ENDPOINT
    S3DIRECT_DESTINATIONS["providers_documents"]["region"] = AWS_MEDIA_REGION
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["bucket"] = AWS_MEDIA_BUCKET_NAME
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["acl"] = "private"
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["endpoint"] = S3DIRECT_ENDPOINT
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["region"] = AWS_MEDIA_REGION

    # Use S3 storage backend for LocalStack
    STORAGES["default"]["BACKEND"] = "common.media_storage_backend.MediaStorage"
else:
    # Production AWS S3 configuration
    AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
    AWS_S3_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
    AWS_S3_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
    AWS_MEDIA_BUCKET_NAME = config("AWS_MEDIA_BUCKET_NAME")
    AWS_MEDIA_LOCATION = config("AWS_MEDIA_LOCATION", default="")
    AWS_STORAGE_BUCKET_NAME = AWS_MEDIA_BUCKET_NAME
    AWS_S3_URL_PROTOCOL = "https:"
    AWS_MEDIA_S3_CUSTOM_DOMAIN = config("AWS_MEDIA_S3_CUSTOM_DOMAIN", default=None)
    AWS_MEDIA_S3_ENDPOINT_URL = config("AWS_MEDIA_S3_ENDPOINT_URL")
    S3DIRECT_ENDPOINT = AWS_MEDIA_S3_ENDPOINT_URL
    AWS_S3_REGION_NAME = config("AWS_S3_REGION_NAME", default="us-east-1")
    AWS_MEDIA_REGION = AWS_S3_REGION_NAME
    AWS_CLOUDFRONT_KEY_ID = config("AWS_CLOUDFRONT_KEY_ID")
    AWS_CLOUDFRONT_KEY = config("AWS_CLOUDFRONT_KEY")
    S3DIRECT_DESTINATIONS["providers_documents"]["bucket"] = AWS_MEDIA_BUCKET_NAME
    S3DIRECT_DESTINATIONS["providers_documents"]["acl"] = "private"
    S3DIRECT_DESTINATIONS["providers_documents"]["endpoint"] = S3DIRECT_ENDPOINT
    S3DIRECT_DESTINATIONS["providers_documents"]["region"] = AWS_MEDIA_REGION
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["bucket"] = AWS_MEDIA_BUCKET_NAME
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["acl"] = "private"
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["endpoint"] = S3DIRECT_ENDPOINT
    S3DIRECT_DESTINATIONS["healthcare_entities_documents"]["region"] = AWS_MEDIA_REGION

    STORAGES["default"]["BACKEND"] = "common.media_storage_backend.MediaStorage"

if AWS_MEDIA_S3_CUSTOM_DOMAIN:
    MEDIA_URL = f"{AWS_S3_URL_PROTOCOL}//{AWS_MEDIA_S3_CUSTOM_DOMAIN}/{AWS_MEDIA_LOCATION + '/' if AWS_MEDIA_LOCATION else ''}"
else:
    MEDIA_URL = (
        f"{AWS_MEDIA_S3_ENDPOINT_URL}"
        f"/{AWS_MEDIA_BUCKET_NAME}/{AWS_MEDIA_LOCATION + '/' if AWS_MEDIA_LOCATION else ''}"
    )
